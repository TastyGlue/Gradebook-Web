@page "/teacher/class-grades/{ClassId:guid}/{SubjectId:guid}"
@inherits ExtendedComponentBase
@using Gradebook.Web.Models.ViewModels

@inject IApiClassService ApiClassService
@inject IApiSubjectService ApiSubjectService
@inject IApiStudentService ApiStudentService
@inject IApiGradeService ApiGradeService
@inject IApiAbsencesService ApiAbsencesService

<PageTitle>Class Grades</PageTitle>

<MudPaper Class="pa-6 mx-auto mt-6" Style="max-width:900px;">
    <MudText Typo="Typo.h5" Class="mb-4">Grades & Absences</MudText>

    <!-- Info Bar -->
    <div class="mud-paper mud-elevation-0 pa-3 mb-4"
         style="display:flex; justify-content:space-between; align-items:center; background-color:var(--mud-palette-background); border-radius:4px;">
        <div>
            <MudText Typo="Typo.subtitle1"><strong>Class:</strong> @_className</MudText>
            <MudText Typo="Typo.subtitle1"><strong>Subject:</strong> @_subjectName</MudText>
        </div>
        <MudText Typo="Typo.subtitle1"><strong>Date:</strong> @_currentDate</MudText>
    </div>

    @if (_isLoading)
    {
        <MudProgressCircular Indeterminate="true" Class="mx-auto my-6" />
    }
    else
    {
        <MudTable Items="_students" Hover="true" Dense="true">
            <HeaderContent>
                <MudTh>Student</MudTh>
                <MudTh>Grades</MudTh>
                <MudTh>Absence</MudTh>
                <MudTh>Actions</MudTh>
            </HeaderContent>
            <RowTemplate Context="student">
                <!-- Name -->
                <MudTd>@(student.User?.FullName ?? "-")</MudTd>

                <!-- Existing Grades -->
                <MudTd>
                    @{
                        var vals = student.Grades
                        .Where(g => g.Subject?.Id == SubjectId)
                        .Select(g => g.Value)
                        .OrderBy(v => v)
                        .ToList();
                    }
                    @if (vals.Any())
                    {
                        @string.Join(", ", vals.Select(v => v.ToString("F1")))
                    }
                    else
                    {
                        <em>—</em>
                    }
                </MudTd>

                <!-- Absence indicator (count hidden) -->
                <MudTd>
                    @{
                        var ab = student.Absences.FirstOrDefault();
                        <span class="mud-badge mud-badge-dot mud-ml-1"
                              style="background-color:@(ab == null ? "transparent" : (ab.IsLate ? "green" : "red"));">
                        </span>
                        ;
                    }
                </MudTd>

                <!-- Actions: Grade & Absence -->
                <MudTd>
                    <MudButton Size="Size.Small" Variant="Variant.Text" OnClick="@(() => OpenGradeDialog(student))">
                        Add Grade
                    </MudButton>
                    <MudButton Size="Size.Small" Variant="Variant.Text" OnClick="@(() => OpenAbsenceDialog(student))">
                        Add Absence
                    </MudButton>
                </MudTd>
            </RowTemplate>
        </MudTable>
    }
</MudPaper>

<!-- Grade Dialog -->
<MudDialog @bind-IsVisible="_gradeDialogOpen" MaxWidth="MaxWidth.Small" FullWidth="true">
    <DialogContent>
        <MudText Typo="Typo.h6" Class="mb-4">Add Grade for @(_dialogStudent?.User?.FullName)</MudText>
        <MudNumericField T="decimal"
                         Label="Grade (2.0–6.0)"
                         @bind-Value="_newGradeValue"
                         Min="2" Max="6"
                         DecimalPlaces="2"
                         Required="true" />
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="SaveGrade">Save</MudButton>
        <MudButton Variant="Variant.Text" OnClick="CloseGradeDialog">Cancel</MudButton>
    </DialogActions>
</MudDialog>

<!-- Absence Dialog -->
<MudDialog @bind-IsVisible="_absenceDialogOpen" MaxWidth="MaxWidth.Small" FullWidth="true">
    <DialogContent>
        <MudText Typo="Typo.h6" Class="mb-4">Add Absence for @(_dialogStudent?.User?.FullName)</MudText>
        <MudCheckBox T="bool"
                     Label="Late?"
                     @bind-Checked="_newAbsenceLate" />
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="SaveAbsence">Save</MudButton>
        <MudButton Variant="Variant.Text" OnClick="CloseAbsenceDialog">Cancel</MudButton>
    </DialogActions>
</MudDialog>
